---
// Hero component
---

<section
  class="hero-section relative min-h-screen flex items-center justify-center overflow-hidden"
>
  <!-- Carrusel de imágenes de fondo -->
  <div class="absolute inset-0 w-full h-full">
    <div class="hero-carousel w-full h-full relative overflow-hidden">
      <!-- Imagen 1 - Primera imagen activa (hero3) -->
      <div class="hero-slide slide-1 absolute inset-0 w-full h-full opacity-100 transition-opacity duration-1000 ease-in-out">
        <img
          src="/images/Hero/home1.jpeg"
          alt="Hero background 1"
          class="w-full h-full object-cover"
        />
      </div>
      
      <!-- Imagen 2 - Segunda imagen (home1) -->
      <div class="hero-slide slide-2 absolute inset-0 w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out">
        <img
          src="/images/Hero/hero3.webp"
          alt="Hero background 2"
          class="w-full h-full object-cover"
        />
      </div>
      
      <!-- Imagen 3 - Tercera imagen (home2) -->
      <div class="hero-slide slide-3 absolute inset-0 w-full h-full opacity-0 transition-opacity duration-1000 ease-in-out">
        <img
          src="/images/Hero/home2.jpeg"
          alt="Hero background 3"
          class="w-full h-full object-cover"
        />
      </div>
    </div>

    <!-- Overlay oscuro para mejor legibilidad -->
    <div class="hero-overlay absolute inset-0 bg-black/70 z-10"></div>
  </div>

  <div class="container mx-auto px-4 pt-24 text-center relative z-20">
    <!-- Título principal rotativo -->
    <h1 class="hero-title text-6xl md:text-8xl font-bold text-white mb-10 md:mb-6">
      <div
        class="rotating-title-container relative h-24 md:h-32 md:overflow-hidden"
      >
        <div class="rotating-titles absolute inset-0">
          <!-- Título 1 (Centro de Operaciones de Ciberseguridad) -->
          <div
            class="font-stolzl rotating-title title-1 absolute inset-0 flex items-center justify-center flex-col"
          >
            <!-- Desktop: Centro de Operaciones (primera línea) -->
            <span
              class="hero-word word-1 desktop-only"
              style="opacity: 0; transform: translateY(50px);">Centro de Operaciones</span
            >
            <!-- Desktop: de Ciberseguridad (segunda línea) -->
            <span
              class="hero-word word-2 desktop-only"
              style="opacity: 0; transform: translateY(50px);">de Ciberseguridad</span
            >
            
            <!-- Mobile: Centro de (primera línea) -->
            <span
              class="hero-word word-1-mobile mobile-only"
              style="opacity: 0; transform: translateY(50px);">Centro de</span
            >
            <!-- Mobile: Operaciones de (segunda línea) -->
            <span
              class="hero-word word-2-mobile mobile-only"
              style="opacity: 0; transform: translateY(50px);">Operaciones de</span
            >
            <!-- Mobile: Ciberseguridad (tercera línea) -->
            <span
              class="hero-word word-3-mobile mobile-only"
              style="opacity: 0; transform: translateY(50px);">Ciberseguridad</span
            >
          </div>

          <!-- Título 2 (Innovación segura) -->
          <div
            class="font-stolzl rotating-title title-2 absolute inset-0 flex items-center justify-center lg:gap-4 flex-col lg:flex-row"
          >
            <span
              class="hero-word word-1"
              style="opacity: 0; transform: translateY(50px);">Innovación</span
            >
            <span
              class="hero-word word-2"
              style="opacity: 0; transform: translateY(50px);">segura</span
            >
          </div>

          <!-- Título 3 (Excelencia tecnológica) -->
          <div
            class="font-stolzl rotating-title title-3 absolute inset-0 flex items-center justify-center lg:gap-4 flex-col lg:flex-row"
          >
            <span
              class="hero-word word-1"
              style="opacity: 0; transform: translateY(50px);">Excelencia</span
            >
            <span
              class="hero-word word-2"
              style="opacity: 0; transform: translateY(50px);">tecnológica</span
            >
          </div>
        </div>
      </div>
    </h1>

    <!-- Subtítulo -->
    <p
      class="hero-subtitle text-xl md:text-2xl text-white/90 mb-8 max-w-3xl mx-auto"
      style="opacity: 0; transform: translateY(30px);"
    >
      Construimos el futuro digital con soluciones innovadoras y tecnología de
      vanguardia
    </p>

    <!-- Botones de acción -->
    <div
      class="hero-buttons flex flex-col sm:flex-row gap-4 justify-center items-center"
      style="opacity: 0; transform: translateY(20px);"
    >
      <a
        href="#servicios"
        class="btn-primary cursor-pointer px-8 py-4 bg-secondary text-white rounded-full font-semibold text-lg hover:bg-white hover:text-secondary transition-all duration-300 transform hover:scale-105"
      >
        Nuestros servicios
      </a>
      <a
        href="#contacto"
        class="btn-secondary cursor-pointer px-8 py-4 border-2 border-white text-white rounded-full font-semibold text-lg hover:bg-white hover:text-dark transition-all duration-300 transform hover:scale-105 shadow-lg"
      >
        Contáctanos
    </a>
    </div>
  </div>

  <!-- Indicador de scroll -->
  <div
    class="scroll-indicator absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20"
    style="opacity: 0; transform: translate(-50%, 20px);"
  >
    <div
      class="w-6 h-10 border-2 border-white rounded-full flex justify-center"
    >
      <div class="scroll-dot w-1 h-3 bg-white rounded-full mt-2 animate-bounce">
      </div>
    </div>
  </div>
</section>

<script>
  // Variables globales para el título rotativo
  let currentTitleIndex = 0;
  let isAnimating = false;
  // Función para obtener las palabras correctas según el dispositivo
  function getTitlesForDevice() {
    const isMobile = window.innerWidth <= 768;
    return [
      { 
        words: isMobile 
          ? ["Centro de", "Operaciones de", "Ciberseguridad"] 
          : ["Centro de Operaciones", "de Ciberseguridad"]
      },
      { words: ["Innovación", "segura"] },
      { words: ["Excelencia", "tecnológica"] },
    ];
  }

  let titles = getTitlesForDevice();

  // Variables globales para el carrusel de imágenes
  let currentSlideIndex = 0;
  let isSlideAnimating = false;
  let slides;
  let totalSlides;
  let imageCarouselInterval;

  // Función para animar el título rotativo
  function animateRotatingTitle() {
    if (isAnimating) return;
    isAnimating = true;

    const currentTitle = document.querySelector(
      `.title-${currentTitleIndex + 1}`
    );
    const nextTitleIndex = (currentTitleIndex + 1) % titles.length;
    const nextTitle = document.querySelector(`.title-${nextTitleIndex + 1}`);

    if (currentTitle && nextTitle) {
      // Usar GSAP si está disponible para mejor rendimiento
      if (typeof gsap !== "undefined") {
        const currentWords = currentTitle.querySelectorAll(".hero-word");
        const nextWords = nextTitle.querySelectorAll(".hero-word");

        // Animar salida con GSAP (restaurado a velocidad original)
        gsap.to(currentWords, {
          y: -50,
          opacity: 0,
          duration: 0.5,
          stagger: 0.1,
          ease: "power2.in",
          onComplete: () => {
            // Ocultar título actual
            currentTitle.style.display = "none";

            // Mostrar siguiente título
            nextTitle.style.display = "flex";

            // Resetear estado inicial
            nextWords.forEach((word) => {
              word.style.transform = "translateY(50px)";
              word.style.opacity = "0";
            });

            // Animar entrada con GSAP (restaurado a velocidad original)
            gsap.to(nextWords, {
              y: 0,
              opacity: 1,
              duration: 0.8,
              stagger: 0.15,
              ease: "power2.out",
              onComplete: () => {
                currentTitleIndex = nextTitleIndex;
                isAnimating = false;
              }
            });
          }
        });
      } else {
        // Fallback con CSS puro (restaurado a velocidad original)
        const currentWords = currentTitle.querySelectorAll(".hero-word");
        currentWords.forEach((word, index) => {
          setTimeout(() => {
            word.style.transform = "translateY(-50px)";
            word.style.opacity = "0";
          }, index * 100);
        });

        // Después de la animación de salida, cambiar al siguiente título (restaurado)
        setTimeout(() => {
          // Ocultar título actual
          currentTitle.style.display = "none";

          // Mostrar y animar siguiente título
          nextTitle.style.display = "flex";
          const nextWords = nextTitle.querySelectorAll(".hero-word");

          // Resetear estado inicial
          nextWords.forEach((word) => {
            word.style.transform = "translateY(50px)";
            word.style.opacity = "0";
          });

          // Animar entrada (restaurado)
          nextWords.forEach((word, index) => {
            setTimeout(() => {
              word.style.transform = "translateY(0)";
              word.style.opacity = "1";
            }, index * 150);
          });

          currentTitleIndex = nextTitleIndex;
          isAnimating = false;
        }, 500);
      }
    }
  }

  // Función para animar el carrusel de imágenes
  function animateImageCarousel() {
    if (isSlideAnimating || totalSlides <= 1) return;
    isSlideAnimating = true;

    // Calcular siguiente slide
    const nextSlideIndex = (currentSlideIndex + 1) % totalSlides;
    const currentSlide = slides[currentSlideIndex];
    const nextSlide = slides[nextSlideIndex];

    if (currentSlide && nextSlide) {
      // Preparar la siguiente imagen (opacidad 0 pero visible)
      nextSlide.style.opacity = '0';
      nextSlide.style.zIndex = '2';
      currentSlide.style.zIndex = '1';

      // Animar el crossfade
      let startTime = null;
      const duration = 1000; // 1 segundo para la transición

      function crossfade(timestamp) {
        if (!startTime) startTime = timestamp;
        const progress = Math.min((timestamp - (startTime || 0)) / duration, 1);
        
        // Easing suave
        const easeProgress = 1 - Math.pow(1 - progress, 3);
        
        // Actualizar opacidades
        currentSlide.style.opacity = 1 - easeProgress;
        nextSlide.style.opacity = easeProgress;
        
        if (progress < 1) {
          requestAnimationFrame(crossfade);
        } else {
          // Transición completada
          currentSlide.style.zIndex = '0';
          nextSlide.style.zIndex = '1';
          currentSlideIndex = nextSlideIndex;
          isSlideAnimating = false;
        }
      }

      requestAnimationFrame(crossfade);
    }
  }


  // Función sincronizada para cambiar fondo y frase al mismo tiempo
  function animateCarouselAndTitlesSync() {
    if (isSlideAnimating || isAnimating) return;
    
    // Animar carrusel de imágenes PRIMERO
    animateImageCarousel();
    
    // Animar título rotativo después de 0.9ms para dar tiempo al fondo
    setTimeout(() => {
      animateRotatingTitle();
    }, 0.9);
  }

  // Función para reiniciar el temporizador del carrusel
  function resetImageCarouselTimer() {
    // Limpiar el intervalo anterior si existe
    if (imageCarouselInterval) {
      clearInterval(imageCarouselInterval);
    }
    
    // Crear un nuevo intervalo que anime fondo y frase juntos
    imageCarouselInterval = setInterval(animateCarouselAndTitlesSync, 5000); // 5 segundos
  }

  // Función para manejar el click en el hero
  function handleHeroClick(event) {
    // Verificar si el click fue en texto o botones
    const clickedElement = event.target;
    const isTextElement = clickedElement.closest('.hero-title, .hero-subtitle, .hero-buttons, .scroll-indicator');
    
    // Si no es un elemento de texto o botón, cambiar imagen y frase, y reiniciar temporizador
    if (!isTextElement) {
      animateCarouselAndTitlesSync();
      resetImageCarouselTimer(); // Reiniciar el temporizador después del click
    }
  }

  // Función para animar elementos del hero con CSS puro
  function animateHeroElements() {
    const subtitle = document.querySelector(".hero-subtitle");
    const buttons = document.querySelector(".hero-buttons");
    const scrollIndicator = document.querySelector(".scroll-indicator");

    // Animar primer título con animación de entrada (igual que cuando cambian)
    const firstTitle = document.querySelector(".title-1");
    if (firstTitle) {
      firstTitle.style.display = "flex";
      const words = firstTitle.querySelectorAll(".hero-word");
      
      // Resetear estado inicial (igual que en animateRotatingTitle)
      words.forEach((word) => {
        word.style.transform = "translateY(50px)";
        word.style.opacity = "0";
      });
      
      // Animar entrada con stagger (igual que en animateRotatingTitle)
      words.forEach((word, index) => {
        setTimeout(() => {
          word.style.transform = "translateY(0)";
          word.style.opacity = "1";
        }, index * 150);
      });
    }

    // Ocultar otros títulos
    for (let i = 2; i <= 3; i++) {
      const title = document.querySelector(`.title-${i}`);
      if (title) {
        title.style.display = "none";
      }
    }

    if (subtitle) {
      subtitle.style.transform = "translateY(50px)";
      subtitle.style.opacity = "0";
      subtitle.style.transition = "all 1.2s ease-out";
    }

    if (buttons) {
      buttons.style.transform = "translateY(50px)";
      buttons.style.opacity = "0";
      buttons.style.transition = "all 1.0s ease-out";
    }

    if (scrollIndicator) {
      scrollIndicator.style.transform = "translateY(30px)";
      scrollIndicator.style.opacity = "0";
      scrollIndicator.style.transition = "all 0.8s ease-out";
    }

    // Animar otros elementos con timing más elegante
    setTimeout(() => {
      if (subtitle) {
        subtitle.style.transform = "translateY(0)";
        subtitle.style.opacity = "1";
      }
    }, 1400);

    setTimeout(() => {
      if (buttons) {
        buttons.style.transform = "translateY(0)";
        buttons.style.opacity = "1";
      }
    }, 1800);

    setTimeout(() => {
      if (scrollIndicator) {
        scrollIndicator.style.transform = "translateY(0)";
        scrollIndicator.style.opacity = "1";
      }
    }, 2200);

    // Iniciar carrusel sincronizado después de 1.5 segundos (más rápido)
    setTimeout(() => {
      resetImageCarouselTimer(); // Usar la función para inicializar el temporizador
    }, 1500);
  }

  // Formas flotantes eliminadas


  // Función principal de inicialización
  function initHeroAnimations() {
    // Inicializar variables del carrusel
    slides = document.querySelectorAll('.hero-slide');
    totalSlides = slides.length;

    // Configurar el estado inicial correcto del carrusel
    if (slides.length >= 3) {
      // Primera imagen activa
      slides[0].style.opacity = '1';
      slides[0].style.zIndex = '1';
      
      // Segunda y tercera imagen inactivas
      slides[1].style.opacity = '0';
      slides[1].style.zIndex = '0';
      slides[2].style.opacity = '0';
      slides[2].style.zIndex = '0';
    }

    // Añadir event listener para click en el hero
    const heroSection = document.querySelector('.hero-section');
    if (heroSection) {
      heroSection.addEventListener('click', handleHeroClick);
    }


    // Intentar usar GSAP si está disponible
    if (typeof gsap !== "undefined" && window.gsapReady) {
      console.log("🎬 Usando GSAP para animaciones del Hero");

      // Timeline principal del hero
      const heroTimeline = gsap.timeline();

      // Formas flotantes eliminadas

      // Animación del primer título con stagger más lento y elegante
      const firstTitle = document.querySelector(".title-1");
      if (firstTitle) {
        firstTitle.style.display = "flex";
        const firstWords = firstTitle.querySelectorAll(".hero-word");

        heroTimeline
          .from(firstWords, {
            y: 100,
            opacity: 0,
            duration: 1.5,
            stagger: 0.25,
            ease: "power2.out",
          })
          .from(
            ".hero-subtitle",
            {
              y: 50,
              opacity: 0,
              duration: 1.2,
              ease: "power2.out",
            },
            "-=0.8"
          );
      }

      // Ocultar otros títulos
      for (let i = 2; i <= 3; i++) {
        const title = document.querySelector(`.title-${i}`);
        if (title) {
          title.style.display = "none";
        }
      }

      // Continuar con el timeline
      heroTimeline
        .from(
          ".hero-buttons",
          {
            y: 50,
            opacity: 0,
            duration: 1.0,
            ease: "power2.out",
          },
          "-=0.6"
        )
        .from(
          ".scroll-indicator",
          {
            y: 30,
            opacity: 0,
            duration: 0.8,
            ease: "power2.out",
          },
          "-=0.4"
        );

      // Iniciar carrusel sincronizado después de 1.5 segundos (más rápido)
      setTimeout(() => {
        resetImageCarouselTimer(); // Usar la función para inicializar el temporizador
      }, 1500);

      // Parallax eliminado - formas flotantes removidas

      // Animación del indicador de scroll
      gsap.to(".scroll-dot", {
        y: 12,
        duration: 1.5,
        repeat: -1,
        ease: "power2.inOut",
      });
    } else {
      console.log("🎨 Usando CSS puro para animaciones del Hero");
      animateHeroElements();
    }
  }

  // Iniciar animaciones cuando GSAP esté listo o después de que termine el loader
  function startHeroAnimations() {
    // MÁXIMA VELOCIDAD - Hero aparece súper rápido (0.9s)
    setTimeout(() => {
      if (window.gsapReady && typeof gsap !== "undefined") {
        initHeroAnimations();
      } else {
        // Fallback con CSS inmediato
        setTimeout(initHeroAnimations, 20);
      }
    }, 900);
  }

  // Verificar si GSAP ya está listo
  if (window.gsapReady) {
    startHeroAnimations();
  } else {
    // Escuchar cuando GSAP esté listo
    window.addEventListener("gsapReady", startHeroAnimations);

    // Fallback: si GSAP no carga, usar CSS - MÁXIMA VELOCIDAD
    setTimeout(startHeroAnimations, 1100);
  }
</script>

<style>
  .hero-section {
    background: linear-gradient(135deg, #eaeaea 0%, #ffffff 50%, #eaeaea 100%);
  }

  /* Estilos para el carrusel de imágenes */
  .hero-carousel {
    position: relative;
  }

  .hero-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .hero-slide img {
    object-fit: cover;
    object-position: center;
    width: 100%;
    height: 100%;
  }

  /* Estilos para el título rotativo */
  .rotating-title-container {
    perspective: 1000px;
  }

  .rotating-title {
    transition: all 0.6s ease-in-out;
  }

  .hero-word {
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    white-space: nowrap;
  }

  /* Espaciado mejorado para las palabras */
  .rotating-title .hero-word:not(:last-child) {
    margin-right: 1rem;
  }

  /* Clases para mostrar/ocultar según dispositivo */
  .desktop-only {
    display: block;
  }
  
  .mobile-only {
    display: none;
  }

  @media (max-width: 768px) {
    .rotating-title .hero-word:not(:last-child) {
      margin-right: 0;
      margin-bottom: 0.5rem;
    }
    
    /* Asegurar que el título 2 se muestre en columna en mobile */
    .title-2 {
      flex-direction: column !important;
    }
    
    .title-2 .hero-word:not(:last-child) {
      margin-right: 0 !important;
      margin-bottom: 0.3rem !important;
    }
    
    /* Font-size menor y line-height ajustado en mobile para el título 2 */
    .title-2 .hero-word {
      font-size: 0.85em !important;
      line-height: 0.9 !important;
    }
    
    /* Mostrar/ocultar elementos según dispositivo */
    .desktop-only {
      display: none !important;
    }
    
    .mobile-only {
      display: block !important;
    }
  }

  /* Estilos específicos para el título 2 en desktop */
  .title-2.desktop-only .hero-word {
    margin-bottom: 0.2rem;
  }

  /* Estilos específicos para el título 2 en mobile */
  .title-2.mobile-only .hero-word {
    margin-bottom: 0.2rem;
  }

  /* Formas flotantes eliminadas */

  /* Efectos hover para botones */
  .btn-primary:hover {
    /* Sin sombra para mejor visibilidad sobre fondo oscuro */
  }

  .btn-secondary:hover {
    box-shadow: 0 10px 25px rgba(255, 255, 255, 0.3);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
      line-height: 1.2;
    }

    .hero-subtitle {
      font-size: 1.125rem;
    }

    .rotating-title-container {
      height: 6rem;
    }
  }

  /* Mejoras para el overlay */
  .hero-overlay {
    backdrop-filter: blur(1px);
    z-index: 10;
  }

  /* Animación suave para el scroll indicator */
  .scroll-indicator {
    transition: all 0.3s ease;
  }

  @media (min-width: 768px) {
    .md\:h-32 {
        height: 16rem !important;
    }
  }
</style>
