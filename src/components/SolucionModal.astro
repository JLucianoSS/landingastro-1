---
export interface Props {
  id: string;
  title: string;
  description: string;
  features: string[];
  highlightedFeatures?: string[];
  icon: string;
  isOpen: boolean;
}

const { 
  id, 
  title, 
  description, 
  features, 
  highlightedFeatures = [], 
  icon, 
  isOpen 
} = Astro.props;
---

<div 
  id={`modal-${id}`}
  class={`modal-overlay ${isOpen ? 'modal-open' : ''}`}
  data-modal-id={id}
>
  <div class="modal-backdrop" data-modal-close={id}></div>
  
  <div class="modal-container">
    <div class="modal-content">
      <!-- Header del modal -->
      <div class="modal-header">
        <div class="modal-icon">
          <img 
            src={icon} 
            alt={title}
            class="w-16 h-16 object-contain filter brightness-0 invert"
          />
        </div>
        <div class="modal-title-section">
          <h3 class="modal-title">{title}</h3>
          <p 
            class="modal-description" 
            data-long-description={description.length > 120 ? "true" : "false"}
          >
            {description}
          </p>
        </div>
        <button 
          class="modal-close-btn" 
          data-modal-close={id}
          aria-label="Cerrar modal"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Contenido del modal -->
      <div class="modal-body">
        <div class="features-grid">
          {features.map((feature, index) => {
            const isHighlighted = highlightedFeatures.includes(feature);
            return (
              <div class={`feature-card ${isHighlighted ? 'feature-highlighted' : ''}`}>
                <div class="feature-icon">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                  </svg>
                </div>
                <span class="feature-text">{feature}</span>
              </div>
            );
          })}
        </div>
      </div>

    </div>
  </div>
</div>

<!-- Script removido - Las funciones openModal y closeModal ahora están en Soluciones.astro -->

<style>
  /* Modal Overlay */
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(8px);
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    padding: 1rem;
  }

  .modal-overlay.modal-open {
    opacity: 1;
    visibility: visible;
  }

  /* Modal Container */
  .modal-container {
    background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
    border-radius: 24px;
    box-shadow: 
      0 25px 50px rgba(0, 0, 0, 0.15),
      0 0 0 1px rgba(255, 255, 255, 0.1);
    max-width: 800px;
    width: 100%;
    max-height: 90vh;
    overflow: hidden;
    position: relative;
    transform: scale(0.8) translateY(50px);
    opacity: 0;
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .modal-overlay.modal-open .modal-container {
    transform: scale(1) translateY(0);
    opacity: 1;
  }

  /* Modal Header */
  .modal-header {
    background: linear-gradient(135deg, #062BED 0%, #0519c7 100%);
    padding: 2rem;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    position: relative;
  }

  .modal-icon {
    flex-shrink: 0;
    width: 80px;
    height: 80px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .modal-title-section {
    flex: 1;
    color: white;
  }

  .modal-title {
    font-family: 'Stolzl', sans-serif;
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  .modal-description {
    font-size: 0.95rem;
    opacity: 0.9;
    margin: 0;
    line-height: 1.4;
  }

  .modal-close-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 12px;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    cursor: pointer;
    transition: all 0.2s ease;
    backdrop-filter: blur(10px);
  }

  .modal-close-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.05);
  }

  /* Modal Body */
  .modal-body {
    padding: 1.5rem;
    max-height: 60vh;
    overflow-y: auto;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.75rem;
  }

  .feature-card {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: #f8fafc;
    border-radius: 10px;
    border: 1px solid #e2e8f0;
    transition: all 0.2s ease;
    min-height: 60px;
  }

  .feature-card:hover {
    background: #f1f5f9;
    border-color: #cbd5e1;
    transform: translateY(-1px);
  }

  .feature-card.feature-highlighted {
    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    border-color: #f59e0b;
    box-shadow: 0 3px 8px rgba(245, 158, 11, 0.15);
  }

  .feature-card.feature-highlighted:hover {
    background: linear-gradient(135deg, #fde68a 0%, #fcd34d 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(245, 158, 11, 0.2);
  }

  .feature-icon {
    flex-shrink: 0;
    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 6px;
    background: #062BED;
    color: white;
  }

  .feature-card.feature-highlighted .feature-icon {
    background: #f59e0b;
  }

  .feature-text {
    font-size: 0.9rem;
    color: #374151;
    font-weight: 500;
    line-height: 1.3;
    text-align: left;
    word-wrap: break-word;
    hyphens: auto;
  }

  .feature-card.feature-highlighted .feature-text {
    color: #92400e;
    font-weight: 600;
  }


  /* Responsive Design */
  @media (max-width: 1024px) and (min-width: 769px) {
    .features-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.6rem;
    }

    .feature-card {
      min-height: 60px;
    }

    .feature-text {
      font-size: 0.85rem;
      line-height: 1.25;
    }
  }

  @media (max-width: 768px) {
    .modal-overlay {
      padding: 0.5rem;
    }

    .modal-container {
      max-width: 100%;
      border-radius: 16px;
      max-height: 95vh;
    }

    .modal-header {
      padding: 1.5rem;
      flex-direction: column;
      text-align: center;
      gap: 1rem;
      min-height: auto;
    }

    .modal-icon {
      width: 70px;
      height: 70px;
      margin: 0 auto;
    }

    .modal-title {
      font-size: 1.25rem;
    }

    .modal-description {
      font-size: 0.9rem;
      max-height: 3.6rem; /* Limitar altura a 3 líneas */
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      text-overflow: ellipsis;
    }

    .modal-close-btn {
      top: 0.75rem;
      right: 0.75rem;
      width: 36px;
      height: 36px;
    }

    .modal-body {
      padding: 1rem;
      max-height: calc(95vh - 200px); /* Ajustar altura dinámicamente */
      overflow-y: auto;
    }

    .features-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.5rem;
    }

    .feature-card {
      padding: 0.75rem 0.5rem;
      gap: 0.4rem;
      min-height: 60px;
    }

    .feature-icon {
      width: 24px;
      height: 24px;
    }

    .feature-text {
      font-size: 0.85rem;
      line-height: 1.25;
    }

  }

  @media (max-width: 480px) {
    .modal-header {
      padding: 1rem;
    }

    .modal-title {
      font-size: 1.1rem;
    }

    .modal-description {
      font-size: 0.85rem;
      max-height: 3.4rem; /* Limitar altura a 3 líneas en móviles pequeños */
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      text-overflow: ellipsis;
    }

    .modal-body {
      padding: 0.75rem;
      max-height: calc(95vh - 180px); /* Ajustar altura dinámicamente para móviles pequeños */
      overflow-y: auto;
    }

    .features-grid {
      grid-template-columns: 1fr;
      gap: 0.4rem;
    }

    .feature-card {
      padding: 0.5rem 0.4rem;
      gap: 0.3rem;
      min-height: 50px;
    }

    .feature-icon {
      width: 20px;
      height: 20px;
    }

    .feature-text {
      font-size: 0.8rem;
      line-height: 1.2;
    }

  }

  /* Estilo específico para modales con descripciones largas en mobile */
  @media (max-width: 768px) {
    .modal-container:has(.modal-description[data-long-description="true"]) {
      max-height: 98vh;
    }
    
    .modal-container:has(.modal-description[data-long-description="true"]) .modal-body {
      max-height: calc(98vh - 160px);
    }
  }

  @media (max-width: 480px) {
    .modal-container:has(.modal-description[data-long-description="true"]) {
      max-height: 98vh;
    }
    
    .modal-container:has(.modal-description[data-long-description="true"]) .modal-body {
      max-height: calc(98vh - 140px);
    }
  }

  /* Scrollbar personalizado */
  .modal-body::-webkit-scrollbar {
    width: 6px;
  }

  .modal-body::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 3px;
  }

  .modal-body::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }

  .modal-body::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>
