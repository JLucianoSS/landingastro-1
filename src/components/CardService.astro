---
interface Props {
  index: number;
  title: string;
  description: string;
  imageUrl: string;
  colorClass: string; // Clase de Tailwind para el color (ej: "white", "blue-500", "red-600")
  features: {
    title: string;
    description: string;
    icon: string;
  }[];
}
const { index, title, description, imageUrl, colorClass, features }: Props = Astro.props;

// Generamos las clases de color basadas en la clase proporcionada
const borderClass = `border-${colorClass}`;
const textClass = `text-${colorClass}`;
const bgClass = `bg-${colorClass}`;
---

<div role="listitem" class={`item border-4 ${borderClass}`}>
  <div class="item_content">
    <!-- <h2 class="item_number">{index}</h2> -->
    <h2 class={`font-stolzl font-bold text-[28px] lg:text-[45px] mb-4 ${textClass}`}>{title}</h2>
    <p class="mb-6 text-white text-base lg:text-[20px] lg:pr-4">
      {description}
    </p>
    
    <!-- Características con iconos -->
    <div class="features-list">
      {features.map((feature) => (
        <div class="feature-item">
          <div class="feature-icon">
            <svg class={`w-8 h-8 ${textClass}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={feature.icon}></path>
            </svg>
          </div>
          <div class="feature-content">
            <span class="feature-title">{feature.title}</span>
            <span class="feature-description">{feature.description}</span>
          </div>
        </div>
      ))}
    </div>
  </div>
  <div class=" flex justify-center md:w-1/2 md:h-full bg-[#0a0f57] pb-8 md:pb-0">
    <img class=" object-cover w-[20vh] h-[20vh] bg-[#0a0f57] md:w-full md:h-full rounded-full md:rounded-none " src={imageUrl} class="item_media" />
  </div>
</div>

<style>
  .item {
    width: 100vw; /* Ocupar todo el ancho del viewport */
    height: 100%;
    display: flex;
    position: absolute;
    inset: 0;
    margin: 0; /* Eliminar márgenes automáticos */
    box-shadow: rgb(149, 157, 165, 0.2) 0px 8px 24px;
    overflow: hidden;
    border-radius: 24px;
    transform: scale(0.8); /* Escala inicial más pequeña */
    border-style: solid; /* Asegurar que el borde sea sólido */
    left: 0; /* Posicionar desde el borde izquierdo */
    right: 0; /* Posicionar hasta el borde derecho */
  }

  .item_number {
    font-size: 1.8rem;
    height: 4rem;
    width: 4rem;
    margin-bottom: 0.5rem;
    border-radius: 50%;
    background-color: #062bed;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
  }

  .item_content {
    background-color: #050835;
    flex-flow: column;
    justify-content: center;
    align-items: flex-start;
    padding: 3rem;
    display: flex;
    position: relative;
    width: 60%; /* Cambiar a 60% por defecto */
  }

  .item_media {
    object-fit: cover;
    width: 40%; /* Cambiar a 40% por defecto */
    height: 100%;
  }

  /* Ajustes para dispositivos md (768px y más) */
  @media (min-width: 768px) {
    .item {
      width: 100vw; /* Ocupar todo el ancho del viewport */
    }

    .item_content {
      width: 60%; /* Mantener 60% para el contenido */
      padding: 2.5rem; /* Padding ajustado para md */
    }

    .item_media {
      width: 40%; /* Mantener 40% para la imagen */
    }
  }

  /* Ajustes para dispositivos lg (1024px y más) */
  @media (min-width: 1024px) {
    .item {
      width: 100vw; /* Ocupar todo el ancho del viewport */
    }

    .item_content {
      width: 60%; /* Cambiar a 60% para el contenido */
      padding: 3.5rem; /* Aumentar padding para mejor espaciado */
    }

    .item_media {
      width: 40%; /* Cambiar a 40% para la imagen */
    }
  }

  /* Ajustes para dispositivos xl (1280px y más) */
  @media (min-width: 1280px) {
    .item {
      width: 100vw; /* Ocupar todo el ancho del viewport */
    }

    .item_content {
      padding: 4rem; /* Más padding en xl */
    }
  }

  .features-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-top: 1rem;
  }

  .feature-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
  }

  .feature-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    background-color: #062bed;
    color: white;
    flex-shrink: 0;
    margin-top: 0.125rem;
  }

  .feature-content {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    flex: 1;
  }

  .feature-title {
    color: rgba(255, 255, 255, 0.95);
    font-size: 1.3rem;
    font-weight: 600;
    line-height: 1.25rem;
  }

  .feature-description {
    color: rgba(255, 255, 255, 0.7);
    font-size: 1.1rem;
    font-weight: 400;
    line-height: 1.35rem;
    max-width: 500px;
  }

  @media (max-width: 768px) {
    .item {
      display: flex;
      flex-direction: column;
      width: 100%;
      height: 100%;
      transform: scale(0.9); /* Reducir escala en mobile para mejor ajuste */
    }

    .item_content {
      height: 80%; /* El contenido ocupa el 90% de la altura */
      width: 100%;
      padding: 1.5rem 1.25rem;
      justify-content: flex-start;
      align-items: center;
      text-align: center;
    }

    .item_media {
      height: 10%; /* La imagen ocupa el 10% de la altura */
      width: 100%;
      object-fit: cover;
      object-position: center;
    }

    .item_number {
      font-size: 1.4rem;
      height: 3rem;
      width: 3rem;
      margin-bottom: 0.75rem;
      margin-top: 0;
    }

    .item_content h2 {
      font-size: 1.75rem !important;
      line-height: 1.3;
      margin-bottom: 0.75rem;
      text-align: center;
    }

    .item_content p {
      font-size: 1rem !important;
      line-height: 1.5;
      margin-bottom: 1rem;
      text-align: center;
      padding: 0 0.5rem;
    }

    .features-list {
      gap: 0.625rem;
      margin-top: 0.5rem;
      width: 100%;
      max-width: 320px;
    }

    .feature-item {
      gap: 0.625rem;
      /* align-items: center; */
    }

    .feature-icon {
      width: 3rem;
      height: 3rem;
      flex-shrink: 0;
    }

    .feature-icon svg {
      width: 1.525rem;
      height: 1.525rem;
    }

    .feature-content {
      text-align: left;
      flex: 1;
    }

    .feature-title {
      font-size: 1.1rem;
      font-weight: 600;
      line-height: 1.2;
      margin-bottom: 0.125rem;
    }

    .feature-description {
      font-size: 0.9rem;
      line-height: 1.3;
      opacity: 0.85;
    }

    /* Estilos específicos para el contenedor de imagen en mobile */
    .item > div:last-child {
      background-color: #050835 !important;
    }

    /* Hacer la imagen más grande en mobile */
    .item_media {
      width: 100px !important;
      height: 100px !important;
    }
  }

  /* Ajustes adicionales para pantallas muy pequeñas */
  @media (max-width: 480px) {
    .item {
      transform: scale(0.85);
    }

    .item_content {
      padding: 1.25rem 1rem;
    }

    .item_content h2 {
      font-size: 1.5rem !important;
    }

    .item_content p {
      font-size: 0.9rem !important;
      padding: 0 0.25rem;
    }

    .features-list {
      /* max-width: 280px; */
      gap: 0.5rem;
    }

    .feature-icon {
      width: 2.5em;
      height: 2.5rem;
    }

    .feature-icon svg {
      width: 1.5rem;
      height: 1.5rem;
    }

    .feature-title {
      font-size: 1.2rem;
    }

    .feature-description {
      font-size: 0.9rem;
    }

    /* Estilos específicos para el contenedor de imagen en pantallas muy pequeñas */
    .item > div:last-child {
      background-color: #050835 !important;
    }

    /* Hacer la imagen más grande en pantallas muy pequeñas */
    .item_media {
      width: 90px !important;
      height: 90px !important;
    }
  }
</style>