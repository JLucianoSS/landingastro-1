---
export interface Props {
  id: string;
  title: string;
  documents: Array<{
    name: string;
    path: string;
    description?: string;
  }>;
}

const { id, title, documents } = Astro.props;
---

<!-- Modal Dialog -->
<dialog id={`modal-${id}`} class="modal-dialog bg-transparent backdrop:bg-black/60 backdrop:backdrop-blur-sm p-0 max-w-2xl w-full max-h-[90vh] rounded-2xl shadow-2xl mx-auto my-auto">
  <div class="modal-content bg-white rounded-2xl shadow-2xl w-full max-h-[90vh] overflow-hidden relative">
      <!-- Modal Header -->
      <div class="modal-header bg-gradient-to-r from-secondary to-secondary/80 px-6 py-4">
        <div class="flex items-center justify-between">
          <h3 class="text-xl font-bold text-white font-stolzl">{title}</h3>
          <button 
            class="modal-close text-white/80 hover:text-white transition-colors duration-200 p-2 hover:bg-white/10 rounded-full cursor-pointer"
            aria-label="Cerrar modal"
            type="button"
            onclick="this.closest('dialog').close()"
          >
            <svg class="w-6 h-6 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
      </div>
      
      <!-- Modal Body -->
      <div class="modal-body p-6 overflow-y-auto max-h-[calc(90vh-80px)]">
        <div class="space-y-4 pb-4">
          {documents.map((doc) => (
            <div class="document-item bg-gray-50 rounded-xl p-4 border border-gray-200 hover:border-secondary/30 transition-all duration-300 hover:shadow-lg group">
              <div class="flex flex-col md:flex-row md:items-start md:justify-between gap-4">
                <div class="flex-1">
                  <h4 class="font-semibold text-gray-900 mb-2 group-hover:text-secondary transition-colors duration-300">
                    {doc.name}
                  </h4>
                  {doc.description && (
                    <p class="text-gray-600 text-sm mb-3">
                      {doc.description}
                    </p>
                  )}
                  <div class="flex items-center text-sm text-gray-500">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                    </svg>
                    Documento PDF
                  </div>
                </div>
                <a 
                  href={`/documentos/${doc.path}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="download-btn md:ml-4 bg-secondary text-white px-4 py-2 rounded-lg hover:bg-secondary/90 transition-all duration-300 transform hover:scale-105 hover:shadow-lg flex items-center justify-center gap-2 text-sm font-medium w-full md:w-auto"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                  </svg>
                  Ver Documento
                </a>
              </div>
            </div>
          ))}
        </div>
        
        <!-- Footer del modal -->
        <div class="mt-6 pt-4 border-t border-gray-200 pb-6">
          <p class="text-sm text-gray-500 text-center">
            Estos documentos están disponibles para su consulta. Al hacer clic en "Ver Documento" se abrirá en una nueva pestaña donde podrá leerlo y descargarlo si lo desea.
          </p>
        </div>
      </div>
    </div>
  </div>
</dialog>

<script>
  // Declaración global para TypeScript
  declare global {
    interface Window {
      openModal?: (modalType: string) => void;
      modalManager?: Map<string, HTMLDialogElement>;
    }
  }

  // Configuración del modal usando HTML5 dialog API
  function initModal() {
    const modalId = '{id}';
    const dialog = document.getElementById(`modal-${modalId}`) as HTMLDialogElement | null;
    const closeBtn = dialog?.querySelector('.modal-close') as HTMLElement | null;
    
    console.log('Inicializando modal:', modalId, 'Dialog encontrado:', !!dialog, 'Botón cerrar encontrado:', !!closeBtn);
    
    if (!dialog || !closeBtn) {
      console.error('Modal no se pudo inicializar - elementos faltantes');
      return;
    }

    // Función simple para cerrar el modal
    function closeModal() {
      console.log('Cerrando modal');
      dialog?.close();
    }

    // Event listeners simplificados
    
    // Click en el botón cerrar (el onclick inline ya maneja esto, pero por si acaso)
    closeBtn.addEventListener('click', (e) => {
      console.log('Botón cerrar clickeado');
      e.preventDefault();
      e.stopPropagation();
      dialog?.close();
    });
    
    // Cerrar al hacer click fuera del contenido (en el backdrop)
    dialog.addEventListener('click', (e) => {
      const rect = dialog.getBoundingClientRect();
      const isInDialog = (
        e.clientX >= rect.left &&
        e.clientX <= rect.right &&
        e.clientY >= rect.top &&
        e.clientY <= rect.bottom
      );
      
      if (!isInDialog) {
        console.log('Cerrando modal por click fuera del contenido');
        dialog?.close();
      }
    });

    // Animación de hover para los documentos
    const documentItems = dialog.querySelectorAll('.document-item') as NodeListOf<HTMLElement>;
    documentItems.forEach(item => {
      item.addEventListener('mouseenter', () => {
        item.style.transform = 'translateY(-2px)';
      });
      
      item.addEventListener('mouseleave', () => {
        item.style.transform = 'translateY(0)';
      });
    });
  }

  // Inicializar cuando el DOM esté listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initModal);
  } else {
    initModal();
  }
</script>

<style>
  .modal-dialog {
    border: none;
    outline: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin: 0;
    max-height: 90vh;
    overflow: hidden;
  }
  
  .modal-dialog::backdrop {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  .modal-content {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .download-btn {
    box-shadow: 0 4px 14px 0 rgba(6, 43, 237, 0.2);
  }
  
  .download-btn:hover {
    box-shadow: 0 6px 20px 0 rgba(6, 43, 237, 0.3);
  }
  
  .document-item {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .document-item:hover {
    transform: translateY(-2px);
  }
  
  /* Animación de entrada para los elementos del documento */
  .document-item {
    animation: slideInUp 0.4s ease-out;
    animation-fill-mode: both;
  }
  
  .document-item:nth-child(1) { animation-delay: 0.1s; }
  .document-item:nth-child(2) { animation-delay: 0.2s; }
  .document-item:nth-child(3) { animation-delay: 0.3s; }
  .document-item:nth-child(4) { animation-delay: 0.4s; }
  .document-item:nth-child(5) { animation-delay: 0.5s; }
  
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .modal-dialog {
      margin: 0;
      max-width: calc(100vw - 2rem);
      width: calc(100vw - 2rem);
    }
    
    .modal-content {
      margin: 0;
      max-height: calc(100vh - 1rem);
      border-radius: 1rem;
    }
    
    .modal-header {
      padding: 1rem;
    }
    
  .modal-body {
    padding: 1rem;
    max-height: calc(100vh - 140px);
    padding-bottom: 2rem;
  }
    
    .document-item {
      padding: 1rem;
    }
    
    .download-btn {
      width: 100%;
      justify-content: center;
      margin-left: 0 !important;
    }
    
    /* Asegurar que no haya desbordamiento horizontal */
    .modal-dialog,
    .modal-content,
    .modal-body,
    .document-item {
      overflow-x: hidden;
    }
  }
  
  /* Para pantallas muy pequeñas */
  @media (max-width: 480px) {
    .modal-dialog {
      margin: 0;
      max-width: calc(100vw - 1.5rem);
      width: calc(100vw - 1.5rem);
    }
    
    .modal-content {
      max-height: calc(100vh - 0.5rem);
    }
    
    .modal-body {
      padding: 0.75rem;
      max-height: calc(100vh - 120px);
      padding-bottom: 1.5rem;
    }
    
    .document-item {
      padding: 0.75rem;
    }
  }
</style>
